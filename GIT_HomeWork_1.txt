


JSON

 4. Создать внешний репозиторий c названием JSON                     -New repository «JSON»
 5. Клонировать репозиторий JSON на локальный компьютер              -git clone https://github.com/ValeriaShar/JSON.git
 6. Внутри локального JSON создать файл “new.json”                   -touch new.json
 7. Добавить файл под гит                                            -git add new.json
 8. Закоммитить файл                                                 -git commit -m «new file»
 9. Отправить файл на внешний GitHub репозиторий                     -git push origin main
 10. Отредактировать содержание файла “new.json” 
    - написать информацию о себе (ФИО, возраст, количество           -1)nano new.json   2)write text 
     домашних животных, будущая желаемая зарплата).
     Всё написать в формате JSON.
 11. Отправить изменения на внешний репозиторий.                     -1) git add new.json 2)git commit -m «added text about me »3)git push origin main
 12. Создать файл preferences.json                                   -touch preferences.json
 13. В файл preferences.json добавить информацию о своих
     предпочтениях (Любимый фильм, любимый сериал, любимая           -1)nano preferences.json  2)write text 
     еда, любимое время года, сторона которую хотели бы 
     посетить) в формате JSON.
 14. Создать файл sklls.json добавить информацию о скиллах           -1)touch sklls.json 2)nano sklls.json 3) write text 
     которые будут изучены на курсе в формате JSON
 15. Отправить сразу 2 файла на внешний репозиторий.                 -git add preferences.json sklls.json
 16. На веб интерфейсе создать файл bug_report.json.                 -1)add file 2)create new file
 17. Сделать Commit changes (сохранить) изменения на                 -Create bug_report.json
     веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json,          -write text 
     добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб             -Update bug_report.json
     интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON           -git pull

XML 

 21. Создать внешний репозиторий c названием XML.                    -1)Repositories 2)New
 22. Клонировать репозиторий XML на локальный компьютер.             -git clone https://github.com/ValeriaShar/XML.git
 23. Внутри локального XML создать файл “new.xml”.                   -touch new.xml
 24. Добавить файл под гит.                                          -git add new.xml 
 25. Закоммитить файл.                                               -git commit -m «new file»
 26. Отправить файл на внешний GitHub репозиторий.                   -git push origin main
 27. Отредактировать содержание файла “new.xml” 
     - написать информацию о себе (ФИО, возраст, количество          -1)nano new.xml  2)write text 
     домашних животных, будущая желаемая зарплата).
     Всё написать в формате XML.
 28. Отправить изменения на внешний репозиторий.                     -1)git add new.xml 2)git commit -m «added text about me» 3)git push origin main
 29. Создать файл preferences.xml                                    -touch preferences.xml
 30. В файл preferences.xml добавить информацию 
     о своих предпочтениях (Любимый фильм, любимый сериал,           -1)nano preferences.xml  2)write text 
     любимая еда, любимое время года, сторона которую 
     хотели бы посетить) в формате XML.
 31. Создать файл sklls.xml добавить информацию о скиллах            -1) touch sklls.xml  2)nano sklls.xml  3)write text
     которые будут изучены на курсе в формате XML
 32. Сделать коммит в одну строку.                                   -1)git add preferences.xml sklls.xml  2) git commit -m «new file» 
 33. Отправить сразу 2 файла на внешний репозиторий.                 -git push origin main
 34. На веб интерфейсе создать файл bug_report.xml.                  -1)add file 2)create new file
 35. Сделать Commit changes (сохранить) изменения                    -Create bug_report.xml
     на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл                           -write text 
     bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения                    -Update bug_report.xml
     на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML            -git pull

TXT
 
 1. Создать внешний репозиторий c названием TXT.                     -1)Repositories 2)New
 2. Клонировать репозиторий TXT на локальный компьютер.              -git clone https://github.com/ValeriaShar/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.                    -touch new.txt
 4. Добавить файл под гит.                                           -git add new.txt
 5. Закоммитить файл.                                                -git commit -m «new file»
 6. Отправить файл на внешний GitHub репозиторий.                    -git push origin main
 7. Отредактировать содержание файла “new.txt” 
    - написать информацию о себе (ФИО, возраст, количество           -1)nano new.txt  2)write text
    домашних животных, будущая желаемая зарплата). 
    Всё написать в формате TXT.
 8. Отправить изменения на внешний репозиторий.                      -1) git add new.txt 2) git commit -m «added text about me» 3) git push origin main
 9. Создать файл preferences.txt                                     -touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих
     предпочтениях (Любимый фильм, любимый сериал,
     любимая еда, любимое время года, сторона которую                -1)nano preferences.txt 2)write text
     хотели бы посетить) в формате TXT.
 11. Создать файл sklls.txt добавить информацию                      -1)touch skills.txt. 2)nano skills.txt  3) write text
     о скиллах которые будут изучены на курсе 
     в формате TXT
 12. Сделать коммит в одну строку.                                   -git add .
 13. Отправить сразу 2 файла на внешний репозиторий.                 -1) git commit -m «new file» 2) git push origin main
 14. На веб интерфейсе создать файл bug_report.txt.                  -1)add file 2)create new file
 15. Сделать Commit changes (сохранить) изменения
     на веб интерфейсе.                                              -Create bug_report.txt 
 16. На веб интерфейсе модифицировать файл bug_report.txt, 
     добавить баг репорт в формате TXT.                              -write text
 17. Сделать Commit changes (сохранить) изменения
 на веб интерфейсе.                                                  -Update bug_report.txt
 18. Синхронизировать внешний и локальный репозиторий TXT            -git pull

